# Generated by Django 4.0.8 on 2023-04-21 14:42

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_change', models.DateField(auto_now=True)),
                ('total_price', models.FloatField(default=0)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MonthCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField()),
                ('end', models.DateField()),
                ('name', models.CharField(choices=[('jan', 'Janeiro'), ('fev', 'Fevereiro'), ('mar', 'Mar√ßo'), ('abr', 'Abril'), ('mai', 'Maio'), ('jun', 'Junho'), ('jul', 'Julho'), ('ago', 'Agosto'), ('set', 'Setembro'), ('out', 'Outubro'), ('nov', 'Novembro'), ('dez', 'Dezembro')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='ProductsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('increment', models.FloatField(default=1.0)),
                ('unit', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='WeekCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_day', models.DateField()),
                ('request_day', models.DateField()),
                ('number', models.IntegerField()),
                ('month_cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='week_cycles', to='baskets.monthcycle')),
            ],
        ),
        migrations.CreateModel(
            name='SoldProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('price', models.FloatField()),
                ('requested_quantity', models.FloatField()),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='baskets.basket')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='baskets.product')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='baskets.unit')),
            ],
        ),
        migrations.CreateModel(
            name='ProductWithPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('price', models.FloatField()),
                ('available_quantity', models.FloatField()),
                ('is_available', models.BooleanField(default=True)),
                ('additional_products_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='baskets.productslist')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='baskets.product')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='baskets.unit')),
            ],
        ),
    ]
